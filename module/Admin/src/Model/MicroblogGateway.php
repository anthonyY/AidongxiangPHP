<?php
namespace Admin\Model;
use Admin\Controller\CommonController;
use Api\Controller\Item\MicroblogItem;
use Zend\Db\Sql\Expression;
use Zend\Db\Sql\Where;

/**
* 微博
*
* @author 系统生成
*
*/
class MicroblogGateway extends BaseGateway {
    /**
    *主键、自动增长
    */
    public $id;

    /**
    *微博内容
    */
    public $content;

    /**
    *点赞总数
    */
    public $praiseNum;

    /**
    *回复总数
    */
    public $commentNum;

    /**
    *转发总数
    */
    public $repeatNum;

    /**
    *是否显示，1显示，2隐藏
    */
    public $display;

    /**
    *地区ID
    */
    public $regionId;

    /**
    *地区数组
    */
    public $regionInfo;

    /**
    *街道
    */
    public $street;

    /**
    *详细地址
    */
    public $address;

    /**
    *经度
    */
    public $longitude;

    /**
    *纬度
    */
    public $latitude;

    /**
    *父ID，转发用
    */
    public $parentId;

    /**
    *用户的id
    */
    public $userId;

    /**
    *小视频的id
    */
    public $videoId;

    /**
    *字段数组
    */
    protected $columns_array = ["id","content","praiseNum","commentNum","repeatNum","display","regionId","regionInfo","street","address","longitude","latitude","parentId","userId","videoId","delete","timestamp"];

    public $table = DB_PREFIX . 'microblog';

    public function addData()
    {
        return parent::addData(); // TODO: Change the autogenerated stub
    }

    public function deleteData()
    {
        return parent::deleteData(); // TODO: Change the autogenerated stub
    }

    public function updateData()
    {
        return parent::updateData(); // TODO: Change the autogenerated stub
    }

    public function deleteByIds($ids)
    {
        $where = new Where();
        $where->equalTo('delete',DELETE_FALSE)->equalTo('user_id',$this->userId)->in('id',$ids);
        $res = $this->update(array('delete' => 1), $where);
        return $res?['s'=>0,'d'=>'删除成功']:['s'=>10000,'d'=>'删除失败'];
    }

    public function getSumByUser()
    {
        $where = new Where();
        $where->equalTo('delete',DELETE_FALSE)->equalTo('user_id',$this->userId);
        if($this->display)
        {
            $where->equalTo('display',$this->display);
        }
        $res = $this->getOne($where,[new Expression('SUM(1) as total')]);
        return $res['total']?$res['total']:0;
    }

    /**
     * @param MicroblogItem $microblog
     * @param $user_id
     * @return array
     */
    public function MicroblogSubmit(MicroblogItem $microblog,$user_id)
    {
        $this->adapter->getDriver()->getConnection()->beginTransaction();
        $content = $microblog->content;
        $imageIds = $microblog->imageIds;
        $videoId = $microblog->videoId;
        $address = $microblog->address;
        $regionId = $microblog->regionId;
        $longitude = $microblog->longitude;
        $latitude = $microblog->latitude;
        $parentId = $microblog->parentId;
        if(!$content && !$videoId && !$imageIds && !$parentId)
        {
            return ['s'=>STATUS_PARAMETERS_CONDITIONAL_ERROR];
        }
        if($imageIds && $videoId)
        {
            return ['s'=>STATUS_PARAMETERS_CONDITIONAL_ERROR,'d'=>'图像内容要求不符'];
        }
        if($imageIds && !is_array($imageIds))
        {
            return ['s'=>STATUS_PARAMETERS_CONDITIONAL_ERROR];
        }
        if($parentId)
        {
            $parent = $this->getOne(['id'=>$parentId],['id','repeat_num']);
            if(!$parent)return ['s'=>STATUS_NODATA,'d'=>'转发数据不存在'];
            $this->update(['repeat_num'=>$parent->repeat_num+1],['id'=>$parentId]);
        }
        $data = [
            'user_id' => $user_id,
        ];
        if($content)$data['content'] = $content;
        if($videoId)$data['video_id'] = $videoId;
        if($regionId)
        {
            $data['region_id'] = $regionId;
            $adminCommonController = new CommonController();
            $region_info = $adminCommonController->getRegionInfoArray($regionId);
            if($region_info['region_info']){
                $data['region_info'] = $region_info['region_info'];
                $data['address'] = $adminCommonController->getProvinceCityCountryName($region_info['region_info']).$address;
            }
        }
        if($address)$data['street'] = $address;
        if($longitude)$data['longitude'] = $longitude;
        if($latitude)$data['latitude'] = $latitude;
        $id = $this->insertData($data);
        if($imageIds)
        {
            $album = new AlbumGateway($this->adapter);
            $set = [
                'type' => 1,
                'from_id' => $id,
            ];
            foreach ($imageIds as $imageId) {
                $set['image_id'] = $imageId;
                $album->insertData($set);
            }
        }
        $this->adapter->getDriver()->getConnection()->commit();
        return ['s'=>STATUS_SUCCESS];
    }
}